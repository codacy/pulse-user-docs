name: MkDocs

on: push

jobs:
  mkdocs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build docs
        run: |
          mkdocs -v build

      - name: Validate generated HTML files
        run: |
          docker run -v $(pwd):/test --rm wjdp/htmltest --conf .htmltest.yml

      # On push to feature branch, deploy the docs to Netlify
      - name: Determine branch name
        id: branches
        if: github.ref != 'refs/heads/master'
        uses: transferwise/sanitize-branch-name@v1

      - name: Convert branch name to lowercase
        id: string
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ steps.branches.outputs.sanitized-branch-name }}

      - name: Deploy docs (branch preview)
        if: github.ref != 'refs/heads/master'
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: ./site
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: Deploy for branch ${{ github.ref_name }}
          enable-pull-request-comment: false
          enable-commit-comment: false
          enable-commit-status: false
          overwrites-pull-request-comment: false
          alias: ${{ steps.string.outputs.lowercase }}
          github-deployment-environment: Netlify
          github-deployment-description: Branch deployment preview
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_PERSONAL_ACCESS_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      # On push to master, deploy the docs to GitHub Pages
      - name: Set up git author
        if: github.ref == 'refs/heads/master'
        run: |
          remote_repo="https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git remote rm origin
          git remote add origin "${remote_repo}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy docs
        if: github.ref == 'refs/heads/master'
        run: |
          echo "${CUSTOM_DOMAIN}" > "${GITHUB_WORKSPACE}/docs/CNAME"
          echo -e "User-agent: *\nSitemap: https://${CUSTOM_DOMAIN}/sitemap.xml" > "${GITHUB_WORKSPACE}/docs/robots.txt"
          git fetch origin gh-pages --verbose
          mkdocs -v gh-deploy --config-file "${GITHUB_WORKSPACE}/mkdocs.yml"
        env:
          CUSTOM_DOMAIN: docs.pulse.codacy.com
